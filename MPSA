for f in *_1.fq.gz; do
id=$(echo "$f" | sed 's/_1.fq.gz//')
flash "$id"_1.fq.gz "$id"_2.fq.gz -M 150 -O -o flashed"$id"
cutadapt -j 80 -a TCGACGAATTCGGCCGGCCG flashed"$id".extendedFrags.fastq > rmada_flashed_"$id".extendedFrags.fastq
cutadapt -j 80 -g tctagagcatgcaccggtac rmada_flashed_"$id".extendedFrags.fastq > rmfor_"$id".fastq
bwa mem -t 100 /home/lijy/E06_MPRA/0606starrseqinput/bwarpe/bwarpe172  rmfor_"$id".fastq -M > bwa1_"$id".sam
samtools view -@ 80 -F 4 -F 256 bwa1_"$id".sam -h  > bwa_uniq_mapped_"$id".sam
grep $'10S\t'   bwa_uniq_mapped_"$id".sam | grep GCTAGCCATT| grep ATTTCTCTAT > 10_grep_"$id".sam2
python filter.sam.py 10_grep_"$id" 172
sed 's/ //g' 10_grep_"$id".sam3|cut -f 3 >  oligo_"$id".sam3
sed 's/ //g' 10_grep_"$id".UMI > UMI_"$id".sam3
paste oligo_"$id".sam3 UMI_"$id".sam3 | grep -v N| sort| uniq -c |  sed 's/^[ ]\{1,\}//g' | sed 's/ /\t/g'> uniq_count_"$id".tab
cut -f 2 uniq_count_"$id".tab| uniq -c > u_"$id".tab

python refilter_under.py   10_grep_"$id" 172
sed 's/ //g' 10_grep_"$id".sam4 | cut -f 3  > oligo_"$id".sam4
sed 's/ //g' 10_grep_"$id".sam4 | cut -f 3 | rev | cut -c 3- | rev > rsID_"$id".sam4
sed 's/ //g' 10_grep_"$id".sam4 | cut -f 4  > startpos_"$id".sam4
sed 's/ //g' 10_grep_"$id".sam4 | cut -f 6  > cigar_"$id".sam4
sed 's/ //g' 10_grep_"$id".2UMI > UMI_"$id".sam4
paste rsID_"$id".sam4  oligo_"$id".sam4 startpos_"$id".sam4  cigar_"$id".sam4  UMI_"$id".sam4 | sort | uniq -c | awk '{print $2, $3, $4, $5, $6, $2"_"$5}' | sed 's/^[ ]\{1,\}//g' | sed 's/ /\t/g' > inter_"$id".2tab

########remove pseudo-spliced
grep -vFf /home/lijy/E06_MPRA/0606starrseqinput/uniq_cigar_all.tab inter_"$id".2tab | awk '{print $2, $3, $4, $5, $1"_"$5}'| sed 's/M10S//g' > rmdnacigar_"$id".txt

###barcode-oligo-correlation
R -e "
library(data.table);
fread('rmdnacigar_${id}.txt',fill = TRUE, header = FALSE) -> rm${id};
fread('/home/lijy/E06_MPRA/0606starrseqinput/inputmap/input_map.txt',fill = TRUE, header = F) -> input;
colnames(rm${id}) <- c('ID','V2','V3','V4','newbar');
colnames(input) <- c('ID','newbar');
rm${id}[input,ID := i.ID, on = 'newbar']  -> adjust_rm${id};
write.table(adjust_rm${id}, 'adjust_rm${id}.tab', sep = '\t', quote = FALSE, row.names = FALSE, col.names = FALSE);
"

awk '{print $1, $4}' adjust_rm"$id".tab |sort|uniq|awk '{print $1}'|uniq -c > under_"$id".tab
awk '{print $1,  $2, $3}' adjust_rm"$id".tab|sort|uniq -c > junction_"$id".tab
